{"version":3,"sources":["components/PhoneDetailsPage/PhoneDetailsPage.tsx"],"names":["mapDispatchToProps","loadPhone","loadPhoneStore","PhoneDetailsPage","connect","state","phoneDetails","phoneError","match","phoneId","params","useState","mainImage","setMainImage","useEffect","window","scrollTo","chooseMainImage","useCallback","event","image","preventDefault","MAIN_URL","history","useHistory","loadPhoneByColor","color","tmpArr","id","split","pop","push","newId","join","loadPhoneByCapacity","capacity","splice","parseInt","className","src","alt","name","images","map","key","href","onClick","colorsAvailable","toLowerCase","type","style","backgroundColor","capacityAvailable","priceDiscount","priceRegular","price","screen","resolution","processor","ram","slice","description","info","title","text","camera","zoom","cell"],"mappings":"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","file":"static/js/3.510f351c.chunk.js","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, RouteComponentProps } from 'react-router-dom';\n\nimport './PhoneDetailsPage.css';\n\nimport { MAIN_URL } from '../../utils/constants';\nimport { ButtonAddToCart } from '../ButtonAddToCart/ButtonAddToCart';\nimport {\n  ButtonAddToFavourite,\n} from '../ButtonAddToFavourite/ButtonAddToFavourite';\n\nimport {\n  loadPhone as loadPhoneStore,\n} from '../../store/ActionCreators';\n\ninterface MatchParams {\n  phoneId: string;\n}\n\ninterface StateProps {\n  phoneDetails: Details | null;\n  phoneError: boolean;\n}\n\ninterface DispatchProps {\n  loadPhone: (value: string) => void;\n}\n\ntype Props = RouteComponentProps<MatchParams> & StateProps & DispatchProps\n\nconst PhoneDetailsPageTemplate: FC<Props> = ({\n  phoneDetails, loadPhone, match, phoneError,\n}) => {\n  const { phoneId } = match.params;\n  const [mainImage, setMainImage] = useState('');\n\n  useEffect(() => {\n    loadPhone(phoneId);\n  }, [loadPhone, phoneId]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const chooseMainImage = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>, image: string) => {\n      event.preventDefault();\n\n      setMainImage(`${MAIN_URL}${image}`);\n    },\n    [],\n  );\n\n  const history = useHistory();\n\n  const loadPhoneByColor = useCallback(\n    (color: string) => {\n      if (phoneDetails) {\n        const tmpArr = phoneDetails.id.split('-');\n\n        tmpArr.pop();\n        tmpArr.push(color);\n        const newId = tmpArr.join('-');\n\n        loadPhone(newId);\n        setMainImage('');\n\n        if (phoneDetails.id !== newId) {\n          history.push(`/phones/${newId}`);\n        }\n      }\n    },\n    [loadPhone, phoneDetails, history],\n  );\n\n  const loadPhoneByCapacity = useCallback(\n    (capacity: string) => {\n      if (phoneDetails) {\n        const tmpArr = phoneDetails.id.split('-');\n\n        tmpArr.splice(3, 1, `${parseInt(capacity, 10)}gb`);\n        const newId = tmpArr.join('-');\n\n        loadPhone(newId);\n\n        if (phoneDetails.id !== newId) {\n          history.push(`/phones/${newId}`);\n        }\n      }\n    },\n    [loadPhone, phoneDetails, history],\n  );\n\n  if (phoneError || !phoneDetails) {\n    return (\n      <>\n        <div className=\"phones__not-phound\">Phone not found</div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"phone__container\">\n      <div className=\"phones__path\">\n        <img src=\"./img/Home.png\" alt=\"home_icon\" className=\"home-icon\" />\n        <img\n          src=\"./img/Chevron.png\"\n          alt=\"arrow_icon\"\n          className=\"arrow-icon\"\n        />\n        <span className=\"phones__path-title\">Phones</span>\n        <img\n          src=\"./img/Chevron.png\"\n          alt=\"arrow_icon\"\n          className=\"arrow-icon\"\n        />\n        <span className=\"phones__path-title\">{phoneDetails.name}</span>\n      </div>\n      <h2 className=\"phones__heding\">{phoneDetails.name}</h2>\n      <div className=\"phone__container-main\">\n        <div className=\"phone__images\">\n          <ul className=\"phone__images--list\">\n            {phoneDetails.images.map(image => (\n              <li key={image} className=\"phone__images-item\">\n                <a\n                  href=\"/\"\n                  className=\"phone__images-link\"\n                  onClick={(event) => chooseMainImage(event, image)}\n                >\n                  <img\n                    src={`${MAIN_URL}${image}`}\n                    alt=\"phone_small_img\"\n                    className=\"phone__images-img\"\n                  />\n                </a>\n              </li>\n            ))}\n          </ul>\n          <div className=\"phone__images--big\">\n            <img\n              src={mainImage || `${MAIN_URL}${phoneDetails.images[0]}`}\n              alt=\"phone_big_img\"\n              className=\"phone__images--big-img\"\n            />\n          </div>\n        </div>\n        <div className=\"phone__main-info\">\n          <div className=\"phone__colors\">\n            <p className=\"main-info__title\">Available colors</p>\n            <div className=\"colors__color-list\">\n              {phoneDetails.colorsAvailable.map((color) => (\n                <div\n                  key={color}\n                  className={\n                    color.toLowerCase() === phoneDetails.color.toLowerCase()\n                      ? 'colors__color-active colors__color'\n                      : 'colors__color'\n                  }\n                >\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: color }}\n                    className=\"colors__color-item\"\n                    onClick={() => loadPhoneByColor(color)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"phone__capacity\">\n            <p className=\"main-info__title\">Select capacity</p>\n            <div className=\"capacity__capacity-list\">\n              {phoneDetails.capacityAvailable.map((capacity) => (\n                <button\n                  type=\"button\"\n                  key={capacity}\n                  className={capacity === phoneDetails.capacity\n                    ? 'capacity__capacity-active capacity__item'\n                    : 'capacity__item'}\n                  onClick={() => loadPhoneByCapacity(capacity)}\n                >\n                  {capacity}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div>\n            <span className=\"card__price price-discount\">\n              {`$${phoneDetails.priceDiscount}`}\n            </span>\n            <span className=\"card__price price-regular\">\n              {`$${phoneDetails.priceRegular}`}\n            </span>\n          </div>\n          <div className=\"card__actions-details\">\n            <ButtonAddToCart\n              id={phoneDetails.id}\n              price={phoneDetails.priceDiscount}\n            />\n            <ButtonAddToFavourite\n              id={phoneDetails.id}\n            />\n          </div>\n          <div className=\"card__details-main\">\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Screen</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.screen}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Resolution</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.resolution}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Processor</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.processor}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Ram</span>\n              <span className=\"card__detail-value\">\n                {`${phoneDetails.ram\n                  ? parseInt(phoneDetails.ram, 10)\n                  : ''} ${phoneDetails.ram.slice(-2)}`}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"phone__container-specification\">\n        <div className=\"phone__about\">\n          <h3 className=\"specification__heading\">\n            About\n          </h3>\n          <div className=\"specification__info\">\n            {phoneDetails.description.map(info => (\n              <div key={info.title} className=\"specification__info-item\">\n                <h4 className=\"specification__info-heading\">\n                  {info.title}\n                </h4>\n                {info.text.map(text => (\n                  <div key={text} className=\"specification__info-text\">\n                    {text}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"phone__description\">\n          <h3 className=\"specification__heading\">\n            Tech specs\n          </h3>\n          <div className=\"card__details-description\">\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Screen\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.screen}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Resolution\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.resolution}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Processor\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.processor}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">Ram</span>\n              <span className=\"card__detail-value specification__value\">\n                {`${phoneDetails.ram\n                  ? parseInt(phoneDetails.ram, 10)\n                  : ''} ${phoneDetails.ram.slice(-2)}`}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Capacity\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {`${phoneDetails.capacity\n                  ? parseInt(phoneDetails.capacity, 10)\n                  : ''\n                } ${phoneDetails.capacity.slice(-2)}`}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Camera\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.camera}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Zoom\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.zoom}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Cell\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.cell.join(', ')}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  phoneDetails: state.phoneDetails,\n  phoneError: state.phoneError,\n});\n\nconst mapDispatchToProps = {\n  loadPhone: loadPhoneStore,\n};\n\nexport const PhoneDetailsPage = connect<StateProps, DispatchProps, {}, State>(\n  mapStateToProps, mapDispatchToProps,\n)(PhoneDetailsPageTemplate);\n"],"sourceRoot":""}