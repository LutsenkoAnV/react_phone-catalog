{"version":3,"sources":["components/PhoneDetailsPage/PhoneDetailsPage.tsx"],"names":["mapDispatchToProps","setFavouriteId","setFavouriteIdStore","deleteFavouriteId","deleteFavouriteIdStore","loadPhone","loadPhoneStore","PhoneDetailsPage","connect","state","phoneDetails","phoneError","phonesFavourite","match","useState","mainImage","setMainImage","useEffect","params","phoneId","window","scrollTo","chooseMainImage","useCallback","event","image","preventDefault","MAIN_URL","loadPhoneByColor","color","tmpArr","id","split","pop","push","newId","join","loadPhoneByCapacity","capacity","splice","parseInt","className","src","alt","name","images","map","key","href","onClick","colorsAvailable","type","style","backgroundColor","capacityAvailable","priceDiscount","priceRegular","includes","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","screen","resolution","processor","ram","slice","description","info","title","text","camera","zoom","cell"],"mappings":"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","file":"static/js/3.9e4242a9.chunk.js","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n  loadPhone as loadPhoneStore,\n  setFavouriteId as setFavouriteIdStore,\n  deleteFavouriteId as deleteFavouriteIdStore,\n} from '../../store/store';\n\nimport './PhoneDetailsPage.css';\nimport { MAIN_URL } from '../../utils/constants';\n\ninterface MatchParams {\n  phoneId: string;\n}\n\ninterface StateProps {\n  phoneDetails: Details | null;\n  phoneError: boolean;\n  phonesFavourite: string[];\n}\n\ninterface DispatchProps {\n  loadPhone: (value: string) => void;\n  setFavouriteId: (value: string) => void;\n  deleteFavouriteId: (value: string) => void;\n}\n\nconst PhoneDetailsPageTemplate: FC<\n  RouteComponentProps<MatchParams> & StateProps & DispatchProps\n> = ({\n  phoneDetails,\n  loadPhone,\n  match,\n  phoneError,\n  setFavouriteId,\n  phonesFavourite,\n  deleteFavouriteId,\n}) => {\n  const [mainImage, setMainImage] = useState('');\n\n  useEffect(() => {\n    loadPhone(match.params.phoneId);\n  }, []);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const chooseMainImage = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>, image: string) => {\n      event.preventDefault();\n\n      setMainImage(`${MAIN_URL}${image}`);\n    },\n    [mainImage],\n  );\n\n  const loadPhoneByColor = useCallback(\n    (color: string) => {\n      if (phoneDetails) {\n        const tmpArr = phoneDetails.id.split('-');\n\n        tmpArr.pop();\n        tmpArr.push(color);\n        const newId = tmpArr.join('-');\n\n        loadPhone(newId);\n        setMainImage('');\n      }\n    },\n    [phoneDetails],\n  );\n\n  const loadPhoneByCapacity = useCallback(\n    (capacity: string) => {\n      if (phoneDetails) {\n        const tmpArr = phoneDetails.id.split('-');\n\n        tmpArr.splice(3, 1, `${parseInt(capacity, 10)}gb`);\n        const newId = tmpArr.join('-');\n\n        loadPhone(newId);\n      }\n    },\n    [phoneDetails],\n  );\n\n  if (phoneError || !phoneDetails) {\n    return (\n      <>\n        <div>Phone not found</div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"phone__container\">\n      <div className=\"phones__path\">\n        <img src=\"./img/Home.png\" alt=\"home_icon\" className=\"home-icon\" />\n        <img\n          src=\"./img/Chevron.png\"\n          alt=\"arrow_icon\"\n          className=\"arrow-icon\"\n        />\n        <span className=\"phones__path-title\">Phones</span>\n        <img\n          src=\"./img/Chevron.png\"\n          alt=\"arrow_icon\"\n          className=\"arrow-icon\"\n        />\n        <span className=\"phones__path-title\">{phoneDetails.name}</span>\n      </div>\n      <h2 className=\"phones__heding\">{phoneDetails.name}</h2>\n      <div className=\"phone__container-main\">\n        <div className=\"phone__images\">\n          <ul className=\"phone__images--list\">\n            {phoneDetails.images.map(image => (\n              <li key={image} className=\"phone__images-item\">\n                <a\n                  href=\"/\"\n                  className=\"phone__images-link\"\n                  onClick={(event) => chooseMainImage(event, image)}\n                >\n                  <img\n                    src={`${MAIN_URL}${image}`}\n                    alt=\"phone_small_img\"\n                    className=\"phone__images-img\"\n                  />\n                </a>\n              </li>\n            ))}\n          </ul>\n          <div className=\"phone__images--big\">\n            <img\n              src={mainImage || `${MAIN_URL}${phoneDetails.images[0]}`}\n              alt=\"phone_big_img\"\n              className=\"phone__images--big-img\"\n            />\n          </div>\n        </div>\n        <div className=\"phone__main-info\">\n          <div className=\"phone__colors\">\n            <p className=\"main-info__title\">Available colors</p>\n            <div className=\"colors__color-list\">\n              {phoneDetails.colorsAvailable.map((color) => (\n                <div\n                  key={color}\n                  className={color === phoneDetails.color\n                    ? 'colors__color-active colors__color'\n                    : 'colors__color'}\n                >\n                  <button\n                    type=\"button\"\n                    style={{ backgroundColor: color }}\n                    className=\"colors__color-item\"\n                    onClick={() => loadPhoneByColor(color)}\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"phone__capacity\">\n            <p className=\"main-info__title\">Select capacity</p>\n            <div className=\"capacity__capacity-list\">\n              {phoneDetails.capacityAvailable.map((capacity) => (\n                <button\n                  type=\"button\"\n                  key={capacity}\n                  className={capacity === phoneDetails.capacity\n                    ? 'capacity__capacity-active capacity__item'\n                    : 'capacity__item'}\n                  onClick={() => loadPhoneByCapacity(capacity)}\n                >\n                  {capacity}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div>\n            <span className=\"card__price price-discount\">\n              {`$${phoneDetails.priceDiscount}`}\n            </span>\n            <span className=\"card__price price-regular\">\n              {`$${phoneDetails.priceRegular}`}\n            </span>\n          </div>\n          <div className=\"card__actions-details\">\n            <button\n              type=\"button\"\n              className=\"card__button-cart button__cart-detail\"\n            >\n              Add to cart\n            </button>\n            {!phonesFavourite.includes(phoneDetails.id)\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"card__button-favourite button__favourite-detail\"\n                  onClick={() => setFavouriteId(phoneDetails.id)}\n                >\n                  {/* eslint-disable-next-line max-len */}\n                  <svg className=\"icon-card\" width=\"18\" height=\"16\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    {/* eslint-disable-next-line max-len */}\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M100 34.976c0 8.434-3.635 16.019-9.423 21.274h0.048l-31.25 31.25c-3.125 3.125-6.25 6.25-9.375 6.25s-6.25-3.125-9.375-6.25l-31.202-31.25c-5.788-5.255-9.423-12.84-9.423-21.274 0-15.865 12.861-28.726 28.726-28.726 8.434 0 16.019 3.635 21.274 9.423 5.255-5.788 12.84-9.423 21.274-9.423 15.865 0 28.726 12.861 28.726 28.726z\" fill=\"#fff\" stroke=\"#2060f6\" strokeWidth=\"6\" />\n                  </svg>\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"card__button-favourite button__favourite-detail\"\n                  onClick={() => deleteFavouriteId(phoneDetails.id)}\n                >\n                  {/* eslint-disable-next-line max-len */}\n                  <svg className=\"icon-card\" width=\"18\" height=\"16\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    {/* eslint-disable-next-line max-len */}\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M100 34.976c0 8.434-3.635 16.019-9.423 21.274h0.048l-31.25 31.25c-3.125 3.125-6.25 6.25-9.375 6.25s-6.25-3.125-9.375-6.25l-31.202-31.25c-5.788-5.255-9.423-12.84-9.423-21.274 0-15.865 12.861-28.726 28.726-28.726 8.434 0 16.019 3.635 21.274 9.423 5.255-5.788 12.84-9.423 21.274-9.423 15.865 0 28.726 12.861 28.726 28.726z\" fill=\"#2060f6\" stroke=\"#2060f6\" strokeWidth=\"6\" />\n                  </svg>\n                </button>\n              )}\n          </div>\n          <div className=\"card__details-main\">\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Screen</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.screen}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Resolution</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.resolution}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Processor</span>\n              <span className=\"card__detail-value\">\n                {phoneDetails.processor}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name\">Ram</span>\n              <span className=\"card__detail-value\">\n                {`${phoneDetails.ram\n                  ? parseInt(phoneDetails.ram, 10)\n                  : ''} ${phoneDetails.ram.slice(-2)}`}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"phone__container-specification\">\n        <div className=\"phone__about\">\n          <h3 className=\"specification__heading\">\n            About\n          </h3>\n          <div className=\"specification__info\">\n            {phoneDetails.description.map(info => (\n              <div key={info.title} className=\"specification__info-item\">\n                <h4 className=\"specification__info-heading\">\n                  {info.title}\n                </h4>\n                {info.text.map(text => (\n                  <div key={text} className=\"specification__info-text\">\n                    {text}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"phone__description\">\n          <h3 className=\"specification__heading\">\n            Tech specs\n          </h3>\n          <div className=\"card__details-description\">\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Screen\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.screen}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Resolution\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.resolution}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Processor\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.processor}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">Ram</span>\n              <span className=\"card__detail-value specification__value\">\n                {`${phoneDetails.ram\n                  ? parseInt(phoneDetails.ram, 10)\n                  : ''} ${phoneDetails.ram.slice(-2)}`}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Capacity\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {`${phoneDetails.capacity\n                  ? parseInt(phoneDetails.capacity, 10)\n                  : ''\n                } ${phoneDetails.capacity.slice(-2)}`}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Camera\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.camera}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Zoom\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.zoom}\n              </span>\n            </div>\n            <div className=\"card__detail\">\n              <span className=\"card__detail-name specification__name\">\n                Cell\n              </span>\n              <span className=\"card__detail-value specification__value\">\n                {phoneDetails.cell.join(', ')}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  phoneDetails: state.phoneDetails,\n  phoneError: state.phoneError,\n  phonesFavourite: state.phonesFavourite,\n});\n\nconst mapDispatchToProps = {\n  setFavouriteId: setFavouriteIdStore,\n  deleteFavouriteId: deleteFavouriteIdStore,\n  loadPhone: loadPhoneStore,\n};\n\nexport const PhoneDetailsPage = connect(\n  mapStateToProps, mapDispatchToProps,\n)(PhoneDetailsPageTemplate);\n"],"sourceRoot":""}